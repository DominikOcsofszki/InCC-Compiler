
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'expressionnonassocTHENnonassocELSEDOWHILEleftCOMMArightASSIGNrightRIGHT_ARROWleftEQSNEQSleftLTGTLEGEleftPLUSMINUSleftTIMESDIVIDErightLPARENASSIGN COMMA DIVIDE DO ELSE EQS FOR GE GT ID IF LBRACE LE LOOP LPAREN LT MINUS NEQS NUMBER PLUS PROC RBRACE RIGHT_ARROW RPAREN SEMICOLON THEN TIMES WHILE print_stack_5expression : ID LPAREN expression_list RPARENexpression : PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expressionid_list :  ID\n                | ID COMMA id_listexpression_list :  expression\n                | expression COMMA expression_listexpression : error RBRACEexpression : WHILE expression DO expression expression : IF expression THEN expression\n                  | IF expression THEN expression ELSE expression\n    expression : IDexpression : NUMBERexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n    expression : ID ASSIGN expressionexpression : LBRACE sequence RBRACE sequence : sequence SEMICOLON expression \n                | expressionexpression : expression LT expression\n                  | expression GT expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression EQS expression\n                  | expression NEQS expression\n    '
    
_lr_action_items = {'ID':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,42,43,45,47,48,49,56,57,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,41,2,2,2,2,41,41,2,2,]),'PROC':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,42,43,45,47,56,57,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'error':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,42,43,45,47,56,57,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'WHILE':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,42,43,45,47,56,57,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'IF':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,42,43,45,47,56,57,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'NUMBER':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,42,43,45,47,56,57,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'LBRACE':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,42,43,45,47,56,57,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,2,7,22,27,28,29,30,31,32,33,34,35,36,39,44,46,50,51,58,59,],[0,-11,-12,-7,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,-17,-18,-1,-8,-9,-10,-2,]),'PLUS':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[9,-11,-12,-7,9,9,9,-13,-14,-15,-16,9,9,9,9,9,9,9,9,-18,-1,9,9,9,9,9,]),'MINUS':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[10,-11,-12,-7,10,10,10,-13,-14,-15,-16,10,10,10,10,10,10,10,10,-18,-1,10,10,10,10,10,]),'TIMES':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[11,-11,-12,-7,11,11,11,11,11,-15,-16,11,11,11,11,11,11,11,11,-18,-1,11,11,11,11,11,]),'DIVIDE':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[12,-11,-12,-7,12,12,12,12,12,-15,-16,12,12,12,12,12,12,12,12,-18,-1,12,12,12,12,12,]),'LT':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[13,-11,-12,-7,13,13,13,-13,-14,-15,-16,-21,-22,-23,-24,13,13,13,13,-18,-1,13,13,13,13,13,]),'GT':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[14,-11,-12,-7,14,14,14,-13,-14,-15,-16,-21,-22,-23,-24,14,14,14,14,-18,-1,14,14,14,14,14,]),'LE':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[15,-11,-12,-7,15,15,15,-13,-14,-15,-16,-21,-22,-23,-24,15,15,15,15,-18,-1,15,15,15,15,15,]),'GE':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[16,-11,-12,-7,16,16,16,-13,-14,-15,-16,-21,-22,-23,-24,16,16,16,16,-18,-1,16,16,16,16,16,]),'EQS':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[17,-11,-12,-7,17,17,17,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,17,17,-18,-1,17,17,17,17,17,]),'NEQS':([1,2,7,22,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,44,46,50,51,52,58,59,],[18,-11,-12,-7,18,18,18,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,18,18,-18,-1,18,18,18,18,18,]),'LPAREN':([2,3,],[19,21,]),'DO':([2,7,22,23,27,28,29,30,31,32,33,34,35,36,39,44,46,50,51,58,59,],[-11,-12,-7,42,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,-17,-18,-1,-8,-9,-10,-2,]),'THEN':([2,7,22,24,27,28,29,30,31,32,33,34,35,36,39,44,46,50,51,58,59,],[-11,-12,-7,43,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,-17,-18,-1,-8,-9,-10,-2,]),'RBRACE':([2,4,7,22,25,26,27,28,29,30,31,32,33,34,35,36,39,44,46,50,51,52,58,59,],[-11,22,-12,-7,44,-20,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,-17,-18,-1,-8,-9,-19,-10,-2,]),'SEMICOLON':([2,7,22,25,26,27,28,29,30,31,32,33,34,35,36,39,44,46,50,51,52,58,59,],[-11,-12,-7,45,-20,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,-17,-18,-1,-8,-9,-19,-10,-2,]),'COMMA':([2,7,22,27,28,29,30,31,32,33,34,35,36,38,39,41,44,46,50,51,58,59,],[-11,-12,-7,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,47,-17,49,-18,-1,-8,-9,-10,-2,]),'RPAREN':([2,7,22,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,44,46,50,51,53,55,58,59,],[-11,-12,-7,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,46,-5,-17,48,-3,-18,-1,-8,-9,-6,-4,-10,-2,]),'ELSE':([2,7,22,27,28,29,30,31,32,33,34,35,36,39,44,46,50,51,58,59,],[-11,-12,-7,-13,-14,-15,-16,-21,-22,-23,-24,-25,-26,-17,-18,-1,-8,56,-10,-2,]),'ASSIGN':([2,],[20,]),'RIGHT_ARROW':([41,54,55,],[-3,57,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,42,43,45,47,56,57,],[1,23,24,26,27,28,29,30,31,32,33,34,35,36,38,39,50,51,52,38,58,59,]),'sequence':([8,],[25,]),'expression_list':([19,47,],[37,53,]),'id_list':([21,48,49,],[40,54,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ID LPAREN expression_list RPAREN','expression',4,'p_proc_call','parsing.py',12),
  ('expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression','expression',7,'p_proc','parsing.py',18),
  ('id_list -> ID','id_list',1,'p_id_list','parsing.py',24),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list','parsing.py',25),
  ('expression_list -> expression','expression_list',1,'p_expression_list','parsing.py',33),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','parsing.py',34),
  ('expression -> error RBRACE','expression',2,'p_error_expression','error_handling.py',35),
  ('expression -> WHILE expression DO expression','expression',4,'p_while','parsing.py',41),
  ('expression -> IF expression THEN expression','expression',4,'p_if_then_else','parsing.py',48),
  ('expression -> IF expression THEN expression ELSE expression','expression',6,'p_if_then_else','parsing.py',49),
  ('expression -> ID','expression',1,'p_id','parsing.py',61),
  ('expression -> NUMBER','expression',1,'p_int','parsing.py',65),
  ('expression -> expression PLUS expression','expression',3,'p_binop','parsing.py',69),
  ('expression -> expression MINUS expression','expression',3,'p_binop','parsing.py',70),
  ('expression -> expression TIMES expression','expression',3,'p_binop','parsing.py',71),
  ('expression -> expression DIVIDE expression','expression',3,'p_binop','parsing.py',72),
  ('expression -> ID ASSIGN expression','expression',3,'p_assign','parsing.py',77),
  ('expression -> LBRACE sequence RBRACE','expression',3,'p_expressions','parsing.py',81),
  ('sequence -> sequence SEMICOLON expression','sequence',3,'p_sequences_multi','parsing.py',85),
  ('sequence -> expression','sequence',1,'p_sequences_multi','parsing.py',86),
  ('expression -> expression LT expression','expression',3,'p_bin_compare','parsing.py',94),
  ('expression -> expression GT expression','expression',3,'p_bin_compare','parsing.py',95),
  ('expression -> expression LE expression','expression',3,'p_bin_compare','parsing.py',96),
  ('expression -> expression GE expression','expression',3,'p_bin_compare','parsing.py',97),
  ('expression -> expression EQS expression','expression',3,'p_bin_compare','parsing.py',98),
  ('expression -> expression NEQS expression','expression',3,'p_bin_compare','parsing.py',99),
]
