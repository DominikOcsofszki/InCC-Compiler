Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FOR
    LOOP
    print_stack_5

Grammar

Rule 0     S' -> expression
Rule 1     expression -> ID LPAREN expression_list RPAREN
Rule 2     expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
Rule 3     id_list -> ID
Rule 4     id_list -> ID COMMA id_list
Rule 5     expression_list -> expression
Rule 6     expression_list -> expression COMMA expression_list
Rule 7     expression -> error RBRACE
Rule 8     expression -> WHILE expression DO expression
Rule 9     expression -> IF expression THEN expression
Rule 10    expression -> IF expression THEN expression ELSE expression
Rule 11    expression -> ID
Rule 12    expression -> NUMBER
Rule 13    expression -> expression PLUS expression
Rule 14    expression -> expression MINUS expression
Rule 15    expression -> expression TIMES expression
Rule 16    expression -> expression DIVIDE expression
Rule 17    expression -> ID ASSIGN expression
Rule 18    expression -> LBRACE sequence RBRACE
Rule 19    sequence -> sequence SEMICOLON expression
Rule 20    sequence -> expression
Rule 21    expression -> expression LT expression
Rule 22    expression -> expression GT expression
Rule 23    expression -> expression LE expression
Rule 24    expression -> expression GE expression
Rule 25    expression -> expression EQS expression
Rule 26    expression -> expression NEQS expression

Terminals, with rules where they appear

ASSIGN               : 17
COMMA                : 4 6
DIVIDE               : 16
DO                   : 8
ELSE                 : 10
EQS                  : 25
FOR                  : 
GE                   : 24
GT                   : 22
ID                   : 1 3 4 11 17
IF                   : 9 10
LBRACE               : 18
LE                   : 23
LOOP                 : 
LPAREN               : 1 2
LT                   : 21
MINUS                : 14
NEQS                 : 26
NUMBER               : 12
PLUS                 : 13
PROC                 : 2
RBRACE               : 7 18
RIGHT_ARROW          : 2
RPAREN               : 1 2
SEMICOLON            : 19
THEN                 : 9 10
TIMES                : 15
WHILE                : 8
error                : 7
print_stack_5        : 

Nonterminals, with rules where they appear

expression           : 2 5 6 8 8 9 9 10 10 10 13 13 14 14 15 15 16 16 17 19 20 21 21 22 22 23 23 24 24 25 25 26 26 0
expression_list      : 1 6
id_list              : 2 2 4
sequence             : 18 19

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18


state 2

    (1) expression -> ID . LPAREN expression_list RPAREN
    (11) expression -> ID .
    (17) expression -> ID . ASSIGN expression

    LPAREN          shift and go to state 19
    PLUS            reduce using rule 11 (expression -> ID .)
    MINUS           reduce using rule 11 (expression -> ID .)
    TIMES           reduce using rule 11 (expression -> ID .)
    DIVIDE          reduce using rule 11 (expression -> ID .)
    LT              reduce using rule 11 (expression -> ID .)
    GT              reduce using rule 11 (expression -> ID .)
    LE              reduce using rule 11 (expression -> ID .)
    GE              reduce using rule 11 (expression -> ID .)
    EQS             reduce using rule 11 (expression -> ID .)
    NEQS            reduce using rule 11 (expression -> ID .)
    $end            reduce using rule 11 (expression -> ID .)
    DO              reduce using rule 11 (expression -> ID .)
    THEN            reduce using rule 11 (expression -> ID .)
    RBRACE          reduce using rule 11 (expression -> ID .)
    SEMICOLON       reduce using rule 11 (expression -> ID .)
    COMMA           reduce using rule 11 (expression -> ID .)
    RPAREN          reduce using rule 11 (expression -> ID .)
    ELSE            reduce using rule 11 (expression -> ID .)
    ASSIGN          shift and go to state 20


state 3

    (2) expression -> PROC . LPAREN id_list RPAREN id_list RIGHT_ARROW expression

    LPAREN          shift and go to state 21


state 4

    (7) expression -> error . RBRACE

    RBRACE          shift and go to state 22


state 5

    (8) expression -> WHILE . expression DO expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 23

state 6

    (9) expression -> IF . expression THEN expression
    (10) expression -> IF . expression THEN expression ELSE expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 24

state 7

    (12) expression -> NUMBER .

    PLUS            reduce using rule 12 (expression -> NUMBER .)
    MINUS           reduce using rule 12 (expression -> NUMBER .)
    TIMES           reduce using rule 12 (expression -> NUMBER .)
    DIVIDE          reduce using rule 12 (expression -> NUMBER .)
    LT              reduce using rule 12 (expression -> NUMBER .)
    GT              reduce using rule 12 (expression -> NUMBER .)
    LE              reduce using rule 12 (expression -> NUMBER .)
    GE              reduce using rule 12 (expression -> NUMBER .)
    EQS             reduce using rule 12 (expression -> NUMBER .)
    NEQS            reduce using rule 12 (expression -> NUMBER .)
    $end            reduce using rule 12 (expression -> NUMBER .)
    DO              reduce using rule 12 (expression -> NUMBER .)
    THEN            reduce using rule 12 (expression -> NUMBER .)
    RBRACE          reduce using rule 12 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 12 (expression -> NUMBER .)
    COMMA           reduce using rule 12 (expression -> NUMBER .)
    RPAREN          reduce using rule 12 (expression -> NUMBER .)
    ELSE            reduce using rule 12 (expression -> NUMBER .)


state 8

    (18) expression -> LBRACE . sequence RBRACE
    (19) sequence -> . sequence SEMICOLON expression
    (20) sequence -> . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    sequence                       shift and go to state 25
    expression                     shift and go to state 26

state 9

    (13) expression -> expression PLUS . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 27

state 10

    (14) expression -> expression MINUS . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 28

state 11

    (15) expression -> expression TIMES . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 29

state 12

    (16) expression -> expression DIVIDE . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 30

state 13

    (21) expression -> expression LT . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 31

state 14

    (22) expression -> expression GT . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 32

state 15

    (23) expression -> expression LE . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 33

state 16

    (24) expression -> expression GE . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 34

state 17

    (25) expression -> expression EQS . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 35

state 18

    (26) expression -> expression NEQS . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 36

state 19

    (1) expression -> ID LPAREN . expression_list RPAREN
    (5) expression_list -> . expression
    (6) expression_list -> . expression COMMA expression_list
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression_list                shift and go to state 37
    expression                     shift and go to state 38

state 20

    (17) expression -> ID ASSIGN . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 39

state 21

    (2) expression -> PROC LPAREN . id_list RPAREN id_list RIGHT_ARROW expression
    (3) id_list -> . ID
    (4) id_list -> . ID COMMA id_list

    ID              shift and go to state 41

    id_list                        shift and go to state 40

state 22

    (7) expression -> error RBRACE .

    PLUS            reduce using rule 7 (expression -> error RBRACE .)
    MINUS           reduce using rule 7 (expression -> error RBRACE .)
    TIMES           reduce using rule 7 (expression -> error RBRACE .)
    DIVIDE          reduce using rule 7 (expression -> error RBRACE .)
    LT              reduce using rule 7 (expression -> error RBRACE .)
    GT              reduce using rule 7 (expression -> error RBRACE .)
    LE              reduce using rule 7 (expression -> error RBRACE .)
    GE              reduce using rule 7 (expression -> error RBRACE .)
    EQS             reduce using rule 7 (expression -> error RBRACE .)
    NEQS            reduce using rule 7 (expression -> error RBRACE .)
    $end            reduce using rule 7 (expression -> error RBRACE .)
    DO              reduce using rule 7 (expression -> error RBRACE .)
    THEN            reduce using rule 7 (expression -> error RBRACE .)
    RBRACE          reduce using rule 7 (expression -> error RBRACE .)
    SEMICOLON       reduce using rule 7 (expression -> error RBRACE .)
    COMMA           reduce using rule 7 (expression -> error RBRACE .)
    RPAREN          reduce using rule 7 (expression -> error RBRACE .)
    ELSE            reduce using rule 7 (expression -> error RBRACE .)


state 23

    (8) expression -> WHILE expression . DO expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    DO              shift and go to state 42
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18


state 24

    (9) expression -> IF expression . THEN expression
    (10) expression -> IF expression . THEN expression ELSE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    THEN            shift and go to state 43
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18


state 25

    (18) expression -> LBRACE sequence . RBRACE
    (19) sequence -> sequence . SEMICOLON expression

    RBRACE          shift and go to state 44
    SEMICOLON       shift and go to state 45


state 26

    (20) sequence -> expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    RBRACE          reduce using rule 20 (sequence -> expression .)
    SEMICOLON       reduce using rule 20 (sequence -> expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18


state 27

    (13) expression -> expression PLUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    PLUS            reduce using rule 13 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 13 (expression -> expression PLUS expression .)
    LT              reduce using rule 13 (expression -> expression PLUS expression .)
    GT              reduce using rule 13 (expression -> expression PLUS expression .)
    LE              reduce using rule 13 (expression -> expression PLUS expression .)
    GE              reduce using rule 13 (expression -> expression PLUS expression .)
    EQS             reduce using rule 13 (expression -> expression PLUS expression .)
    NEQS            reduce using rule 13 (expression -> expression PLUS expression .)
    $end            reduce using rule 13 (expression -> expression PLUS expression .)
    DO              reduce using rule 13 (expression -> expression PLUS expression .)
    THEN            reduce using rule 13 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 13 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 13 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 13 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 13 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 13 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! TIMES           [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 13 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 28

    (14) expression -> expression MINUS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    PLUS            reduce using rule 14 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 14 (expression -> expression MINUS expression .)
    LT              reduce using rule 14 (expression -> expression MINUS expression .)
    GT              reduce using rule 14 (expression -> expression MINUS expression .)
    LE              reduce using rule 14 (expression -> expression MINUS expression .)
    GE              reduce using rule 14 (expression -> expression MINUS expression .)
    EQS             reduce using rule 14 (expression -> expression MINUS expression .)
    NEQS            reduce using rule 14 (expression -> expression MINUS expression .)
    $end            reduce using rule 14 (expression -> expression MINUS expression .)
    DO              reduce using rule 14 (expression -> expression MINUS expression .)
    THEN            reduce using rule 14 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 14 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 14 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 14 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 14 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 14 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! TIMES           [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 29

    (15) expression -> expression TIMES expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    PLUS            reduce using rule 15 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 15 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 15 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 15 (expression -> expression TIMES expression .)
    LT              reduce using rule 15 (expression -> expression TIMES expression .)
    GT              reduce using rule 15 (expression -> expression TIMES expression .)
    LE              reduce using rule 15 (expression -> expression TIMES expression .)
    GE              reduce using rule 15 (expression -> expression TIMES expression .)
    EQS             reduce using rule 15 (expression -> expression TIMES expression .)
    NEQS            reduce using rule 15 (expression -> expression TIMES expression .)
    $end            reduce using rule 15 (expression -> expression TIMES expression .)
    DO              reduce using rule 15 (expression -> expression TIMES expression .)
    THEN            reduce using rule 15 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 15 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 15 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 15 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 15 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 15 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 30

    (16) expression -> expression DIVIDE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    PLUS            reduce using rule 16 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 16 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 16 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 16 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 16 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 16 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 16 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 16 (expression -> expression DIVIDE expression .)
    EQS             reduce using rule 16 (expression -> expression DIVIDE expression .)
    NEQS            reduce using rule 16 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 16 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 16 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 16 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 16 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 16 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 16 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 16 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 16 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 31

    (21) expression -> expression LT expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    LT              reduce using rule 21 (expression -> expression LT expression .)
    GT              reduce using rule 21 (expression -> expression LT expression .)
    LE              reduce using rule 21 (expression -> expression LT expression .)
    GE              reduce using rule 21 (expression -> expression LT expression .)
    EQS             reduce using rule 21 (expression -> expression LT expression .)
    NEQS            reduce using rule 21 (expression -> expression LT expression .)
    $end            reduce using rule 21 (expression -> expression LT expression .)
    DO              reduce using rule 21 (expression -> expression LT expression .)
    THEN            reduce using rule 21 (expression -> expression LT expression .)
    RBRACE          reduce using rule 21 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 21 (expression -> expression LT expression .)
    COMMA           reduce using rule 21 (expression -> expression LT expression .)
    RPAREN          reduce using rule 21 (expression -> expression LT expression .)
    ELSE            reduce using rule 21 (expression -> expression LT expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! PLUS            [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 32

    (22) expression -> expression GT expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    LT              reduce using rule 22 (expression -> expression GT expression .)
    GT              reduce using rule 22 (expression -> expression GT expression .)
    LE              reduce using rule 22 (expression -> expression GT expression .)
    GE              reduce using rule 22 (expression -> expression GT expression .)
    EQS             reduce using rule 22 (expression -> expression GT expression .)
    NEQS            reduce using rule 22 (expression -> expression GT expression .)
    $end            reduce using rule 22 (expression -> expression GT expression .)
    DO              reduce using rule 22 (expression -> expression GT expression .)
    THEN            reduce using rule 22 (expression -> expression GT expression .)
    RBRACE          reduce using rule 22 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 22 (expression -> expression GT expression .)
    COMMA           reduce using rule 22 (expression -> expression GT expression .)
    RPAREN          reduce using rule 22 (expression -> expression GT expression .)
    ELSE            reduce using rule 22 (expression -> expression GT expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! PLUS            [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 33

    (23) expression -> expression LE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    LT              reduce using rule 23 (expression -> expression LE expression .)
    GT              reduce using rule 23 (expression -> expression LE expression .)
    LE              reduce using rule 23 (expression -> expression LE expression .)
    GE              reduce using rule 23 (expression -> expression LE expression .)
    EQS             reduce using rule 23 (expression -> expression LE expression .)
    NEQS            reduce using rule 23 (expression -> expression LE expression .)
    $end            reduce using rule 23 (expression -> expression LE expression .)
    DO              reduce using rule 23 (expression -> expression LE expression .)
    THEN            reduce using rule 23 (expression -> expression LE expression .)
    RBRACE          reduce using rule 23 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 23 (expression -> expression LE expression .)
    COMMA           reduce using rule 23 (expression -> expression LE expression .)
    RPAREN          reduce using rule 23 (expression -> expression LE expression .)
    ELSE            reduce using rule 23 (expression -> expression LE expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! PLUS            [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 34

    (24) expression -> expression GE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    LT              reduce using rule 24 (expression -> expression GE expression .)
    GT              reduce using rule 24 (expression -> expression GE expression .)
    LE              reduce using rule 24 (expression -> expression GE expression .)
    GE              reduce using rule 24 (expression -> expression GE expression .)
    EQS             reduce using rule 24 (expression -> expression GE expression .)
    NEQS            reduce using rule 24 (expression -> expression GE expression .)
    $end            reduce using rule 24 (expression -> expression GE expression .)
    DO              reduce using rule 24 (expression -> expression GE expression .)
    THEN            reduce using rule 24 (expression -> expression GE expression .)
    RBRACE          reduce using rule 24 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 24 (expression -> expression GE expression .)
    COMMA           reduce using rule 24 (expression -> expression GE expression .)
    RPAREN          reduce using rule 24 (expression -> expression GE expression .)
    ELSE            reduce using rule 24 (expression -> expression GE expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12

  ! PLUS            [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 13 ]
  ! GT              [ shift and go to state 14 ]
  ! LE              [ shift and go to state 15 ]
  ! GE              [ shift and go to state 16 ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 35

    (25) expression -> expression EQS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    EQS             reduce using rule 25 (expression -> expression EQS expression .)
    NEQS            reduce using rule 25 (expression -> expression EQS expression .)
    $end            reduce using rule 25 (expression -> expression EQS expression .)
    DO              reduce using rule 25 (expression -> expression EQS expression .)
    THEN            reduce using rule 25 (expression -> expression EQS expression .)
    RBRACE          reduce using rule 25 (expression -> expression EQS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression EQS expression .)
    COMMA           reduce using rule 25 (expression -> expression EQS expression .)
    RPAREN          reduce using rule 25 (expression -> expression EQS expression .)
    ELSE            reduce using rule 25 (expression -> expression EQS expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16

  ! PLUS            [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! LT              [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! GT              [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! LE              [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! GE              [ reduce using rule 25 (expression -> expression EQS expression .) ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 36

    (26) expression -> expression NEQS expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    EQS             reduce using rule 26 (expression -> expression NEQS expression .)
    NEQS            reduce using rule 26 (expression -> expression NEQS expression .)
    $end            reduce using rule 26 (expression -> expression NEQS expression .)
    DO              reduce using rule 26 (expression -> expression NEQS expression .)
    THEN            reduce using rule 26 (expression -> expression NEQS expression .)
    RBRACE          reduce using rule 26 (expression -> expression NEQS expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression NEQS expression .)
    COMMA           reduce using rule 26 (expression -> expression NEQS expression .)
    RPAREN          reduce using rule 26 (expression -> expression NEQS expression .)
    ELSE            reduce using rule 26 (expression -> expression NEQS expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16

  ! PLUS            [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! LT              [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! GT              [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! LE              [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! GE              [ reduce using rule 26 (expression -> expression NEQS expression .) ]
  ! EQS             [ shift and go to state 17 ]
  ! NEQS            [ shift and go to state 18 ]


state 37

    (1) expression -> ID LPAREN expression_list . RPAREN

    RPAREN          shift and go to state 46


state 38

    (5) expression_list -> expression .
    (6) expression_list -> expression . COMMA expression_list
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    RPAREN          reduce using rule 5 (expression_list -> expression .)
    COMMA           shift and go to state 47
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18


state 39

    (17) expression -> ID ASSIGN expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    $end            reduce using rule 17 (expression -> ID ASSIGN expression .)
    DO              reduce using rule 17 (expression -> ID ASSIGN expression .)
    THEN            reduce using rule 17 (expression -> ID ASSIGN expression .)
    RBRACE          reduce using rule 17 (expression -> ID ASSIGN expression .)
    SEMICOLON       reduce using rule 17 (expression -> ID ASSIGN expression .)
    COMMA           reduce using rule 17 (expression -> ID ASSIGN expression .)
    RPAREN          reduce using rule 17 (expression -> ID ASSIGN expression .)
    ELSE            reduce using rule 17 (expression -> ID ASSIGN expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18

  ! PLUS            [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! TIMES           [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! LT              [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! GT              [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! LE              [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! GE              [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! EQS             [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]
  ! NEQS            [ reduce using rule 17 (expression -> ID ASSIGN expression .) ]


state 40

    (2) expression -> PROC LPAREN id_list . RPAREN id_list RIGHT_ARROW expression

    RPAREN          shift and go to state 48


state 41

    (3) id_list -> ID .
    (4) id_list -> ID . COMMA id_list

    RPAREN          reduce using rule 3 (id_list -> ID .)
    RIGHT_ARROW     reduce using rule 3 (id_list -> ID .)
    COMMA           shift and go to state 49


state 42

    (8) expression -> WHILE expression DO . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 50

state 43

    (9) expression -> IF expression THEN . expression
    (10) expression -> IF expression THEN . expression ELSE expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 51

state 44

    (18) expression -> LBRACE sequence RBRACE .

    PLUS            reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    MINUS           reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    TIMES           reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    DIVIDE          reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    LT              reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    GT              reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    LE              reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    GE              reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    EQS             reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    NEQS            reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    $end            reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    DO              reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    THEN            reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    RBRACE          reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    SEMICOLON       reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    COMMA           reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    RPAREN          reduce using rule 18 (expression -> LBRACE sequence RBRACE .)
    ELSE            reduce using rule 18 (expression -> LBRACE sequence RBRACE .)


state 45

    (19) sequence -> sequence SEMICOLON . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 52

state 46

    (1) expression -> ID LPAREN expression_list RPAREN .

    PLUS            reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    MINUS           reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    TIMES           reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    DIVIDE          reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    LT              reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    GT              reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    LE              reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    GE              reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    EQS             reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    NEQS            reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    $end            reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    DO              reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    THEN            reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    RBRACE          reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    SEMICOLON       reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    COMMA           reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    RPAREN          reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)
    ELSE            reduce using rule 1 (expression -> ID LPAREN expression_list RPAREN .)


state 47

    (6) expression_list -> expression COMMA . expression_list
    (5) expression_list -> . expression
    (6) expression_list -> . expression COMMA expression_list
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 38
    expression_list                shift and go to state 53

state 48

    (2) expression -> PROC LPAREN id_list RPAREN . id_list RIGHT_ARROW expression
    (3) id_list -> . ID
    (4) id_list -> . ID COMMA id_list

    ID              shift and go to state 41

    id_list                        shift and go to state 54

state 49

    (4) id_list -> ID COMMA . id_list
    (3) id_list -> . ID
    (4) id_list -> . ID COMMA id_list

    ID              shift and go to state 41

    id_list                        shift and go to state 55

state 50

    (8) expression -> WHILE expression DO expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    $end            reduce using rule 8 (expression -> WHILE expression DO expression .)
    DO              reduce using rule 8 (expression -> WHILE expression DO expression .)
    THEN            reduce using rule 8 (expression -> WHILE expression DO expression .)
    RBRACE          reduce using rule 8 (expression -> WHILE expression DO expression .)
    SEMICOLON       reduce using rule 8 (expression -> WHILE expression DO expression .)
    COMMA           reduce using rule 8 (expression -> WHILE expression DO expression .)
    RPAREN          reduce using rule 8 (expression -> WHILE expression DO expression .)
    ELSE            reduce using rule 8 (expression -> WHILE expression DO expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18

  ! PLUS            [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! MINUS           [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! TIMES           [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! LT              [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! GT              [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! LE              [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! GE              [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! EQS             [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]
  ! NEQS            [ reduce using rule 8 (expression -> WHILE expression DO expression .) ]


state 51

    (9) expression -> IF expression THEN expression .
    (10) expression -> IF expression THEN expression . ELSE expression
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    $end            reduce using rule 9 (expression -> IF expression THEN expression .)
    DO              reduce using rule 9 (expression -> IF expression THEN expression .)
    THEN            reduce using rule 9 (expression -> IF expression THEN expression .)
    RBRACE          reduce using rule 9 (expression -> IF expression THEN expression .)
    SEMICOLON       reduce using rule 9 (expression -> IF expression THEN expression .)
    COMMA           reduce using rule 9 (expression -> IF expression THEN expression .)
    RPAREN          reduce using rule 9 (expression -> IF expression THEN expression .)
    ELSE            shift and go to state 56
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18

  ! PLUS            [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! MINUS           [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! TIMES           [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! LT              [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! GT              [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! LE              [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! GE              [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! EQS             [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! NEQS            [ reduce using rule 9 (expression -> IF expression THEN expression .) ]
  ! ELSE            [ reduce using rule 9 (expression -> IF expression THEN expression .) ]


state 52

    (19) sequence -> sequence SEMICOLON expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    RBRACE          reduce using rule 19 (sequence -> sequence SEMICOLON expression .)
    SEMICOLON       reduce using rule 19 (sequence -> sequence SEMICOLON expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18


state 53

    (6) expression_list -> expression COMMA expression_list .

    RPAREN          reduce using rule 6 (expression_list -> expression COMMA expression_list .)


state 54

    (2) expression -> PROC LPAREN id_list RPAREN id_list . RIGHT_ARROW expression

    RIGHT_ARROW     shift and go to state 57


state 55

    (4) id_list -> ID COMMA id_list .

    RPAREN          reduce using rule 4 (id_list -> ID COMMA id_list .)
    RIGHT_ARROW     reduce using rule 4 (id_list -> ID COMMA id_list .)


state 56

    (10) expression -> IF expression THEN expression ELSE . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 58

state 57

    (2) expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW . expression
    (1) expression -> . ID LPAREN expression_list RPAREN
    (2) expression -> . PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression
    (7) expression -> . error RBRACE
    (8) expression -> . WHILE expression DO expression
    (9) expression -> . IF expression THEN expression
    (10) expression -> . IF expression THEN expression ELSE expression
    (11) expression -> . ID
    (12) expression -> . NUMBER
    (13) expression -> . expression PLUS expression
    (14) expression -> . expression MINUS expression
    (15) expression -> . expression TIMES expression
    (16) expression -> . expression DIVIDE expression
    (17) expression -> . ID ASSIGN expression
    (18) expression -> . LBRACE sequence RBRACE
    (21) expression -> . expression LT expression
    (22) expression -> . expression GT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GE expression
    (25) expression -> . expression EQS expression
    (26) expression -> . expression NEQS expression

    ID              shift and go to state 2
    PROC            shift and go to state 3
    error           shift and go to state 4
    WHILE           shift and go to state 5
    IF              shift and go to state 6
    NUMBER          shift and go to state 7
    LBRACE          shift and go to state 8

    expression                     shift and go to state 59

state 58

    (10) expression -> IF expression THEN expression ELSE expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    $end            reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    DO              reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    THEN            reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    RBRACE          reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    SEMICOLON       reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    COMMA           reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    RPAREN          reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    ELSE            reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18

  ! PLUS            [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! MINUS           [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! TIMES           [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! DIVIDE          [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LT              [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GT              [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! LE              [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! GE              [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! EQS             [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]
  ! NEQS            [ reduce using rule 10 (expression -> IF expression THEN expression ELSE expression .) ]


state 59

    (2) expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .
    (13) expression -> expression . PLUS expression
    (14) expression -> expression . MINUS expression
    (15) expression -> expression . TIMES expression
    (16) expression -> expression . DIVIDE expression
    (21) expression -> expression . LT expression
    (22) expression -> expression . GT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GE expression
    (25) expression -> expression . EQS expression
    (26) expression -> expression . NEQS expression

    $end            reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    DO              reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    THEN            reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    RBRACE          reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    SEMICOLON       reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    COMMA           reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    RPAREN          reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    ELSE            reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .)
    PLUS            shift and go to state 9
    MINUS           shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    LT              shift and go to state 13
    GT              shift and go to state 14
    LE              shift and go to state 15
    GE              shift and go to state 16
    EQS             shift and go to state 17
    NEQS            shift and go to state 18

  ! PLUS            [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! MINUS           [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! TIMES           [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! LT              [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! GT              [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! LE              [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! GE              [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! EQS             [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]
  ! NEQS            [ reduce using rule 2 (expression -> PROC LPAREN id_list RPAREN id_list RIGHT_ARROW expression .) ]

